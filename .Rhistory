ggsave("Figures/posidonia_tweets.png")
positweet %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("6 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 6-hour intervals\nfor the keywords posidonia and variants",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(1, 0.5))
positweet %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("6 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 6-hour intervals\nfor the keywords posidonia and variants",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.7))
ggsave("Figures/posidonia_tweets.png")
View(seagrasstweet30day)
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
ts_plot("24hour") +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(
x = NULL, y = NULL,
title = "Frequency of (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)\nTwitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 24-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ggsave("Figures/seagrassGloriaTwitter.png")
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
ts_plot("3 hours") +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(
x = NULL, y = NULL,
title = "Frequency of (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)\nTwitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 24-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ggsave("Figures/seagrassGloriaTwitter.png")
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords Frequency of (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)\nTwitter statuses from past 30 daysa",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords Frequency of (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)\nTwitter statuses from past 30 days",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords Frequency of (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords Frequency of (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 3-hour intervals\nfor the keywords (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 3-hour intervals\nfor the keywords (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5)))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 3-hour intervals\nfor the keywords (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
ggsave("Figures/seagrassGloriaTwitter.png")
delta %>%
filter(is_retweet == FALSE) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past three weeks",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
delta %>%
filter(is_retweet == FALSE) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past three weeks (NO RETWEETS)",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
delta %>%
filter(is_retweet == FALSE) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 3 weeks (NO RETWEETS)",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
ggsave("Figures/deltaGloriaTwitter_onlytweets.png")
library(tidyverse)
library(tidylog)
library(rtweet)
library(httpuv)
library(ggsci)
load(file = "TwitterDataRtweet/Delta_only_media.Rdata")
delta %>%
group_by(is_retweet) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past three weeks",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
View(delta)
delta %>%
arrange(retweet_count)
delta %>%
arrange(retweet_count) %>%
View(delta)
View(delta)
View(delta)
delta %>%
arrange(retweet_count) %>%
select(status_id)
delta %>%
arrange(retweet_count) %>%
arrange(retweet_count, screen_name) %>%
print()
delta %>%
arrange(retweet_count) %>%
select(status_id, screen_name)
delta %>%
arrange(retweet_count) %>%
select(status_id, screen_name, retweet_count)
View(delta)
locale()
delta %>%
arrange(desc(retweet_count)) %>%
select(status_id, screen_name, retweet_count)
#
# seagrasstweet30day <- search_30day(q = '(posidonia OR poseidonia OR #posidonia OR cymodocea OR cymo OR seagrass) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                    n = 5000,
#                                    env_name = "research")
# save(seagrasstweet30day, file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
load(file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
seagrasstweet30day %>%
arrange(desc(retweet_count)) %>%
select(status_id, screen_name, retweet_count)
# seagrasstweet30day_media_only <- search_30day(q = 'has:media(posidonia OR poseidonia OR #posidonia OR cymodocea OR cymo OR seagrass) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                     n = 5000,
#                                     env_name = "research")
# save(seagrasstweet30day_media_only, file = "TwitterDataRtweet/SeagrassMediaOnlyGloriaStorm.Rdata")
load(file = "TwitterDataRtweet/SeagrassMediaOnlyGloriaStorm.Rdata")
#
# seagrasstweet30day <- search_30day(q = '(posidonia OR poseidonia OR #posidonia OR cymodocea OR cymo OR seagrass) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                    n = 5000,
#                                    env_name = "research")
# save(seagrasstweet30day, file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
load(file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
#
# seagrasstweet30day <- search_30day(q = '(posidonia OR poseidonia OR #posidonia OR cymodocea OR cymo OR seagrass) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                    n = 5000,
#                                    env_name = "research")
# save(seagrasstweet30day, file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
load(file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
# positweet30day <- search_30day(q = '(posidonia OR poseidonia OR #posidonia) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                n = 5000,
#                                env_name = "research")
# save(positweet30day, file = "TwitterDataRtweet/PosidoniaGloriaStorm2.Rdata")
load(file = "TwitterDataRtweet/PosidoniaGloriaStorm.Rdata")
library(tidyverse)
library(tidylog)
library(rtweet)
library(httpuv)
library(ggsci)
positweet <- search_fullarchive(q = "posidonia OR posidònia OR poseidonia OR poseidònia",
fromDate = "202001120000",
toDate = "202002130000",
n = 1000)
positweet <- search_fullarchive(q = "posidonia OR posidònia OR poseidonia OR poseidònia",
fromDate = "202001120000",
toDate = "202002130000",
n = 1000,
env_name = "research")
positweet <- search_fullarchive(q = "posidonia OR posidònia OR poseidonia OR poseidònia",
fromDate = "202001120000",
toDate = "202002130000",
n = 5000,
env_name = "research")
View(positweet)
positweet %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("6 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 6-hour intervals\nfor the keywords posidonia and variants",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.7))
positweet %>%
arrange(desc(retweet_count)) %>%
select(status_id, screen_name, retweet_count)
#
# seagrasstweet30day <- search_30day(q = '(posidonia OR poseidonia OR #posidonia OR cymodocea OR cymo OR seagrass) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                    n = 5000,
#                                    env_name = "research")
# save(seagrasstweet30day, file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
load(file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
library(tidyverse)
library(tidylog)
library(rtweet)
library(httpuv)
library(ggsci)
#
# seagrasstweet30day <- search_30day(q = '(posidonia OR poseidonia OR #posidonia OR cymodocea OR cymo OR seagrass) (Gloria OR #Gloria OR temporal OR storm OR llevantada)',
#                                    n = 5000,
#                                    env_name = "research")
# save(seagrasstweet30day, file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
load(file = "TwitterDataRtweet/SeagrassGloriaStorm.Rdata")
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 3-hour intervals\nfor the keywords (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 3-hour intervals\nfor the keywords (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 18),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.text = element_text(size = 18),
legend.position = c(0.8, 0.5))
seagrasstweet30day %>%
# filter(is_retweet == FALSE) %>%
group_by(is_retweet) %>%
ts_plot("3 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 30 days",
subtitle = "Twitter status (tweet) counts aggregated using 3-hour intervals\nfor the keywords (posidonia OR poseidonia OR #posidonia OR cymodocea OR\ncymo OR seagrass) AND (Gloria OR #Gloria OR temporal OR storm OR llevantada)",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 18),
legend.title = element_blank(),
axis.text.x = element_text(size = 18),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.text = element_text(size = 18),
legend.position = c(0.8, 0.5))
ggsave("Figures/seagrassGloriaTwitter.pdf")
#
#
#
# delta <- search_30day(q = "has:media(temporal OR storm OR llevantada OR borrasca OR tempesta) delta ebre gloria",
#                       n = 15000,
#                       env_name = "research",
#                       toDate = 202001300000)
# save(delta, file = "TwitterDataRtweet/Delta_only_media.Rdata")
load("TwitterDataRtweet/Delta_only_media.Rdata")
delta %>%
group_by(is_retweet) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past three weeks",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
delta %>%
group_by(is_retweet) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past three weeks",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
scale_colour_d3(palette = "category20", labels = c("Tweets", "Retweets")) +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 18),
legend.title = element_blank(),
axis.text.x = element_text(size = 18),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.y = element_text(size = 18),
legend.text = element_text(size = 18),
legend.position = c(0.8, 0.5))
ggsave("Figures/deltaGloriaTwitter_retweetsVStweets.pdf")
delta %>%
filter(is_retweet == FALSE) %>%
ts_plot("1 hours") +
labs(x = "Time",
y = "# of tweets",
title = "Frequency of Twitter statuses from past 3 weeks (NO RETWEETS)",
subtitle = "Twitter status (tweet) counts aggregated using hourly intervals\nfor the keywords storm AND delta AND ebre AND gloria",
caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 16),
legend.title = element_blank(),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.5))
